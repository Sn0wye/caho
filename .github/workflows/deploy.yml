name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      skip_build:
        description: 'Skip build and only deploy'
        required: false
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ !inputs.skip_build }}
    outputs:
      image_tag: ${{ steps.image.outputs.tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image tag
        id: image
        run: echo "tag=ghcr.io/sn0wye/caho-api:prod" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/arm64
          tags: ${{ steps.image.outputs.tag }}
          cache-from: type=registry,ref=ghcr.io/sn0wye/caho-api:prod
          cache-to: type=inline
          pull: true

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ always() && (needs.build.result == 'success' || inputs.skip_build) }}

    steps:
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e
            echo "Pulling latest image..."
            docker compose pull caho-api

            echo "Restarting container..."
            docker compose up -d --no-deps caho-api

            echo "Cleaning old images..."
            docker image prune -f
